{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Descri\u00e7\u00e3o Este prjeto \u00e9 o servidor de desafios usado na disciplina Design de Software do primeiro semestre de engenharia do Insper. O servidor tinha a funcao de disponibilizar desafios para os alunos fazerem enviarem os arquivos com as respostas. Essas respostas ser\u00e3o testadas na hora, retornado o resultado do desafio. Ser\u00e1 retornado um OK caso o desafio satisfa\u00e7a o proposito e um erro caso n\u00e3o. How to run Primeiro \u00e9 necessario instalar as depend\u00eancias, isto pode ser feito usando o Pipenv > pipenv install Segundo basta executar o servidor usando o pipenv, lembrando que como estamos rodando o servidor na porta 80 (porta reservada) e' necessario rodar com root. > sudo pipenv run python softdes.py A partir de agora voce possui o servidor de desafios rodando em http://localhost:80/ (Inclua links e screenshots do software rodando.)","title":"Descri\u00e7\u00e3o"},{"location":"#descricao","text":"Este prjeto \u00e9 o servidor de desafios usado na disciplina Design de Software do primeiro semestre de engenharia do Insper. O servidor tinha a funcao de disponibilizar desafios para os alunos fazerem enviarem os arquivos com as respostas. Essas respostas ser\u00e3o testadas na hora, retornado o resultado do desafio. Ser\u00e1 retornado um OK caso o desafio satisfa\u00e7a o proposito e um erro caso n\u00e3o.","title":"Descri\u00e7\u00e3o"},{"location":"#how-to-run","text":"Primeiro \u00e9 necessario instalar as depend\u00eancias, isto pode ser feito usando o Pipenv > pipenv install Segundo basta executar o servidor usando o pipenv, lembrando que como estamos rodando o servidor na porta 80 (porta reservada) e' necessario rodar com root. > sudo pipenv run python softdes.py A partir de agora voce possui o servidor de desafios rodando em http://localhost:80/ (Inclua links e screenshots do software rodando.)","title":"How to run"},{"location":"professores/","text":"Professores Este \u00e9 um tutorial para voc\u00ea que \u00e9 professor e deseja utilziar nosso servidor para cadastrar desafios para seus alunos. Tutoriais 1. Adicionando novos usu\u00e1rios A adi\u00e7\u00e3o de alunos \u00e9 feita atrav\u00e9s do script adduser.py . Ele pode ser acessado clicando aqui . Para utiliz\u00e1-lo, tenha em m\u00e3os as informa\u00e7\u00f5es dos usu\u00e1rios que ser\u00e3o adicionados. Estes devem estar em um arquivo denominado users.csv , colocado no mesmo diret\u00f3rio que o script. Cada liha deste arquivo representa um usu\u00e1rio. A linha deve conter duas informa\u00e7\u00f5es: O nome de usu\u00e1rio O tipo do usu\u00e1rio (admin, aluno ou professor) Abaixo um exemplo de csv. admin,admin gabriel,aluno Neste caso, rodando o script teremos os usu\u00e1rios admin e gabriel adicionados na base de dados. Lembrete : A senha padr\u00e3o e inicial de todo usu\u00e1rio \u00e9 seu proprio username . 2. Adicionando novos desafios A adi\u00e7\u00e3o de desafios ocorre atrav\u00e9s de um sqcript .sql . A estrutura de um quiz \u00e9 a que segue: numb : Inteiro que indica o n\u00famero do quiz; release : Texto no formato YYYY-MM-DD . Indica a data de in\u00edcio do teste; expire : Texto no formato YYYY-MM-DD HH:MM:SS . Indica a data limite para a realiza\u00e7\u00e3o do teste; problem : Texto de descri\u00e7\u00e3o do problema; tests : Texto no formato de array, onde cada item da array \u00e9 um teste a ser realizado; results : Texto no formato de array, onde cada item da array \u00e9 o resultado esperado pelo teste; diagnosis : Texto no formato de array, onde cada item da array \u00e9 o feedback recebido pelo aluno caso ele n\u00e3o acerte o teste; Lembrete : A ordem das arrays tests , results e diagnosis importa! Voc\u00ea deve casar a posi\u00e7\u00e3o desejada da tripla de teste, resultado e diagn\u00f3stico. Tendo em m\u00e3os essa informa\u00e7\u00f5es, \u00e9 poss\u00edvel inserir um novo desafio no sistema atrav\u00e9s do seguinte comando: sqlite3 quiz.db 'Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (_numb, _release, _expire, _problem, _tests, _results, _diagnosis);' Como refer\u00eancia, tenha o exemplo abaixo: sqlite quiz.db \"Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (1, '2021-08-10','2021-12-31 23:59:59','Exemplo de problema','[[1],[2],[3]]','[0, 0, 0]','[\\\"a\\\",\\\"b\\\",\\\"c\\\"]')\";","title":"Professores"},{"location":"professores/#professores","text":"Este \u00e9 um tutorial para voc\u00ea que \u00e9 professor e deseja utilziar nosso servidor para cadastrar desafios para seus alunos.","title":"Professores"},{"location":"professores/#tutoriais","text":"","title":"Tutoriais"},{"location":"professores/#1-adicionando-novos-usuarios","text":"A adi\u00e7\u00e3o de alunos \u00e9 feita atrav\u00e9s do script adduser.py . Ele pode ser acessado clicando aqui . Para utiliz\u00e1-lo, tenha em m\u00e3os as informa\u00e7\u00f5es dos usu\u00e1rios que ser\u00e3o adicionados. Estes devem estar em um arquivo denominado users.csv , colocado no mesmo diret\u00f3rio que o script. Cada liha deste arquivo representa um usu\u00e1rio. A linha deve conter duas informa\u00e7\u00f5es: O nome de usu\u00e1rio O tipo do usu\u00e1rio (admin, aluno ou professor) Abaixo um exemplo de csv. admin,admin gabriel,aluno Neste caso, rodando o script teremos os usu\u00e1rios admin e gabriel adicionados na base de dados. Lembrete : A senha padr\u00e3o e inicial de todo usu\u00e1rio \u00e9 seu proprio username .","title":"1. Adicionando novos usu\u00e1rios"},{"location":"professores/#2-adicionando-novos-desafios","text":"A adi\u00e7\u00e3o de desafios ocorre atrav\u00e9s de um sqcript .sql . A estrutura de um quiz \u00e9 a que segue: numb : Inteiro que indica o n\u00famero do quiz; release : Texto no formato YYYY-MM-DD . Indica a data de in\u00edcio do teste; expire : Texto no formato YYYY-MM-DD HH:MM:SS . Indica a data limite para a realiza\u00e7\u00e3o do teste; problem : Texto de descri\u00e7\u00e3o do problema; tests : Texto no formato de array, onde cada item da array \u00e9 um teste a ser realizado; results : Texto no formato de array, onde cada item da array \u00e9 o resultado esperado pelo teste; diagnosis : Texto no formato de array, onde cada item da array \u00e9 o feedback recebido pelo aluno caso ele n\u00e3o acerte o teste; Lembrete : A ordem das arrays tests , results e diagnosis importa! Voc\u00ea deve casar a posi\u00e7\u00e3o desejada da tripla de teste, resultado e diagn\u00f3stico. Tendo em m\u00e3os essa informa\u00e7\u00f5es, \u00e9 poss\u00edvel inserir um novo desafio no sistema atrav\u00e9s do seguinte comando: sqlite3 quiz.db 'Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (_numb, _release, _expire, _problem, _tests, _results, _diagnosis);' Como refer\u00eancia, tenha o exemplo abaixo: sqlite quiz.db \"Insert into QUIZ(numb, release, expire, problem, tests, results, diagnosis) values (1, '2021-08-10','2021-12-31 23:59:59','Exemplo de problema','[[1],[2],[3]]','[0, 0, 0]','[\\\"a\\\",\\\"b\\\",\\\"c\\\"]')\";","title":"2. Adicionando novos desafios"},{"location":"students/","text":"Alunos Este \u00e9 um tutorial para voc\u00ea que \u00e9 aluno e deseja utilziar nosso servidor consultar e validar os desafios. Tutoriais 1. Entrando no servidor de desafios Acesse o servidor atrav\u00e9s deste endere\u00e7o . Ao acessar, insira seu usu\u00e1rio e sua senha na p\u00e1gina inicial. Caso seja seu primeiro login, sua senha ser\u00e1 id\u00eantica \u00e0 seu usu\u00e1rio. Lembre-se de alter\u00e1-la ap\u00f3s ter terminado o acesso! 2. Enviando uma solu\u00e7\u00e3o para o desafio Ao acessar sua conta, encontrar\u00e1 os desafios dispon\u00edveis na barra esquerda do sistema. Selecione o desafio que gostaria de realizar no momento. Ao selecionar, ser\u00e1 levado para a p\u00e1gina do desafio, onde existe um bot\u00e3o de \"adicionar resposta\". Respostas de desafios s\u00e3o aceitas apenas como arquivos .py com uma fun\u00e7\u00e3o cujo nome ser\u00e1 desafioX , onde X representa o n\u00famero do desafio em quest\u00e3o. Ao processar sua resposta, o sistema pode exibir dois tipos de resposta: Solu\u00e7\u00e3o correta : Ao enviar uma solu\u00e7\u00e3o correta, o sistema deixar\u00e1 um aviso de ok na tela. Solu\u00e7\u00e3o errada : Ao enviar uma solu\u00e7\u00e3o incorreta, o sistema deixar\u00e1 uma mensagem customizada com base no resultado de sua solu\u00e7\u00e3o.","title":"Alunos"},{"location":"students/#alunos","text":"Este \u00e9 um tutorial para voc\u00ea que \u00e9 aluno e deseja utilziar nosso servidor consultar e validar os desafios.","title":"Alunos"},{"location":"students/#tutoriais","text":"","title":"Tutoriais"},{"location":"students/#1-entrando-no-servidor-de-desafios","text":"Acesse o servidor atrav\u00e9s deste endere\u00e7o . Ao acessar, insira seu usu\u00e1rio e sua senha na p\u00e1gina inicial. Caso seja seu primeiro login, sua senha ser\u00e1 id\u00eantica \u00e0 seu usu\u00e1rio. Lembre-se de alter\u00e1-la ap\u00f3s ter terminado o acesso!","title":"1. Entrando no servidor de desafios"},{"location":"students/#2-enviando-uma-solucao-para-o-desafio","text":"Ao acessar sua conta, encontrar\u00e1 os desafios dispon\u00edveis na barra esquerda do sistema. Selecione o desafio que gostaria de realizar no momento. Ao selecionar, ser\u00e1 levado para a p\u00e1gina do desafio, onde existe um bot\u00e3o de \"adicionar resposta\". Respostas de desafios s\u00e3o aceitas apenas como arquivos .py com uma fun\u00e7\u00e3o cujo nome ser\u00e1 desafioX , onde X representa o n\u00famero do desafio em quest\u00e3o. Ao processar sua resposta, o sistema pode exibir dois tipos de resposta: Solu\u00e7\u00e3o correta : Ao enviar uma solu\u00e7\u00e3o correta, o sistema deixar\u00e1 um aviso de ok na tela. Solu\u00e7\u00e3o errada : Ao enviar uma solu\u00e7\u00e3o incorreta, o sistema deixar\u00e1 uma mensagem customizada com base no resultado de sua solu\u00e7\u00e3o.","title":"2. Enviando uma solu\u00e7\u00e3o para o desafio"}]}